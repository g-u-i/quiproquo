@import '_pantoufle.variables.less';

/* Additional variables */
@interface-padding: 1cm;
@cover-inner-width: calc(100% ~"-" @cover-margin-ext + @cover-margin-int);
@cover-inner-height: calc(100% ~"-" @cover-margin-top + @cover-margin-bottom);
@page-inner-width: calc(100% ~"-" @page-margin-ext + @page-margin-int);
@page-inner-height: calc(100% ~"-" @page-margin-top + @page-margin-bottom);
@page-inner-width-mm: @page-width - @page-margin-ext - @page-margin-int;
@page-inner-height-mm: @page-height - @page-margin-top - @page-margin-bottom;

.page
{
  position: relative;
  float:left;
  width: @page-width;
  height: @page-height;
  overflow: hidden;

  .content {
    position: static !important;
    overflow: hidden;
    width: @page-inner-width;
    height: @page-inner-height;
    margin-top: @page-margin-top;
    margin-bottom: @page-margin-bottom;
  }

}

.page#cover
{
  .content {
    width: @cover-inner-width;
    height: @cover-inner-height;
    margin-top: @cover-margin-top;
    margin-right: @cover-margin-int;
    margin-bottom: @cover-margin-bottom;
    margin-left: @cover-margin-ext;
  }
}

.page.page-default
{

  & when (@page-width >= @sheet-width) {

    .content {
      margin-left: @page-margin-ext;
      margin-right: @page-margin-int;
    }
  }

  & when (@page-width < @sheet-width) {

    // Odd page
    &:nth-of-type(odd)
    {
      .content {
        margin-left: @page-margin-int;
        margin-right: @page-margin-ext;
      }
    }

    // Even page
    &:nth-of-type(even)
    {
      .content {
        margin-left: @page-margin-ext;
        margin-right: @page-margin-int;
      }
    }

  }

}

/* =Screen
  -----------------------------------------------------------------------------*/
@media screen {

  *, *::after, *::before {
    box-sizing: border-box;
  }

  html
  {
    height: 100%; width: 100%;
    margin: 0;
  }

  body
  {
    margin: 0;
    min-width: @sheet-width + 3 * @interface-padding;
    background-color: rgb(96,96,96);
    &.preview {
      background-color: rgb(186, 186, 186);
    }
  }

  .page
  {
    margin-top: @interface-padding;
    background-color: #fff;

    // Last page
    &:last-child {
      margin-bottom: @interface-padding;
    }

    // --- U.I. Helper
    & {
      box-shadow: 2px 2px 0px 1px #000, 0px 0px 0px 1px #000;
    }

    &:before {
      content: "";
      display: block;
      position: absolute;
      top: @page-margin-top;
      bottom: @page-margin-bottom;
      border: 1px solid;
      border-color: rgb(255,79,255) rgb(153,51,255);
      pointer-events: none;
    }

  }

  .page#cover
  {
    margin-right: @interface-padding;

    & when (@page-width >= @sheet-width) {
      margin-left: @interface-padding;
    }

    & when (@page-width < @sheet-width) {
      margin-left: @page-width + @interface-padding;
    }

    &:before {
      top: @cover-margin-top;
      right: @cover-margin-int;
      bottom: @cover-margin-bottom;
      left: @cover-margin-ext;
    }
  }

  .page.page-default
  {

    & when (@page-width >= @sheet-width) {

      margin-right: @interface-padding;
      margin-left: @interface-padding;

      // --- U.I. Helper
      &:before {
        left: @page-margin-ext;
        right: @page-margin-int;
      }

    }

    & when (@page-width < @sheet-width) {

      // Odd page
      &:nth-of-type(odd)
      {
        margin-left: @interface-padding;
      }

      // Even page
      &:nth-of-type(even)
      {
        margin-right: @interface-padding;
      }

      // --- U.I. Helper
      &:nth-of-type(odd):before {
        left: @page-margin-int;
        right: @page-margin-ext;
      }
      &:nth-of-type(even):before {
        left: @page-margin-ext;
        right: @page-margin-int;
      }

    }

  }

} // @media screen


/* =Print
  -----------------------------------------------------------------------------*/
@media print {

  *, *::after, *::before {
    box-sizing: border-box;
  }

  @page
  {
    size: landscape; // DOESN’T WORK
    margin: 0mm;
  }

  html, body {
    background-color: transparent;
    margin: 0;
  }


  // Convert cm to view port unit.
  .page {
    width: @page-width / @sheet-width * 100vw;
    height: @page-height / @sheet-height * 100vh;
    // .content {
    //   width: calc( (@page-width / @sheet-width * 100vw) ~"-" @page-margin-ext + @page-margin-int );
    //   height: calc( (@page-height / @sheet-height * 100vh) ~"-" @page-margin-top + @page-margin-bottom );
    // }
  }

} // @media print
